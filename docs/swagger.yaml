definitions:
  models.APIError:
    properties:
      errorCode:
        type: integer
      errorMessage:
        type: string
    type: object
  models.CategoryCreate:
    properties:
      active:
        type: boolean
      categoryName:
        type: string
      description:
        type: string
      id:
        type: string
    type: object
  models.CategoryResponse:
    properties:
      active:
        type: boolean
      categoryName:
        type: string
      description:
        type: string
      id:
        type: string
    type: object
  models.CustomerCreate:
    properties:
      address:
        type: string
      birthday:
        type: string
      city:
        type: string
      country:
        type: string
      dni:
        type: string
      email:
        type: string
      id:
        type: string
      name:
        type: string
      password:
        type: string
      phone:
        type: string
      postalCode:
        type: string
      userName:
        type: string
    type: object
  models.CustomerResponse:
    properties:
      address:
        type: string
      birthday:
        type: string
      city:
        type: string
      country:
        type: string
      dni:
        type: string
      email:
        type: string
      id:
        type: string
      name:
        type: string
      password:
        type: string
      phone:
        type: string
      postalCode:
        type: string
      userName:
        type: string
    type: object
  models.LoginCreate:
    properties:
      customerID:
        type: string
      id:
        type: string
    type: object
  models.LoginResponse:
    properties:
      customerID:
        type: string
      id:
        type: string
    type: object
  models.OrderCreate:
    properties:
      customerID:
        type: string
      id:
        type: string
      orderDate:
        type: string
      requiredDate:
        type: string
      shipAddress:
        type: string
      shipCity:
        type: string
      shipCountry:
        type: string
      shipName:
        type: string
      shipPostalCode:
        type: string
      shippedDate:
        type: string
      shipperID:
        type: string
    type: object
  models.OrderProductCreate:
    properties:
      discount:
        type: number
      orderID:
        type: string
      productID:
        type: string
      quantity:
        type: integer
      unitPrice:
        type: number
    type: object
  models.OrderProductResponse:
    properties:
      discount:
        type: number
      orderID:
        type: string
      productID:
        type: string
      quantity:
        type: integer
      unitPrice:
        type: number
    type: object
  models.OrderResponse:
    properties:
      customerID:
        type: string
      id:
        type: string
      orderDate:
        type: string
      requiredDate:
        type: string
      shipAddress:
        type: string
      shipCity:
        type: string
      shipCountry:
        type: string
      shipName:
        type: string
      shipPostalCode:
        type: string
      shippedDate:
        type: string
      shipperID:
        type: string
    type: object
  models.PaymentCreate:
    properties:
      creditCardID:
        type: string
      id:
        type: string
      orderID:
        type: string
    type: object
  models.PaymentResponse:
    properties:
      creditCardID:
        type: string
      id:
        type: string
      orderID:
        type: string
    type: object
  models.ProductCreate:
    properties:
      categoryID:
        type: string
      discontinued:
        type: boolean
      id:
        type: string
      productName:
        type: string
      quantity:
        type: integer
      quantityPerUnit:
        type: string
      reorderLevel:
        type: integer
      supplierID:
        type: string
      unitsInStock:
        type: integer
      unitsOnOrder:
        type: integer
    type: object
  models.ProductResponse:
    properties:
      categoryID:
        type: string
      discontinued:
        type: boolean
      id:
        type: string
      productName:
        type: string
      quantity:
        type: integer
      quantityPerUnit:
        type: string
      reorderLevel:
        type: integer
      supplierID:
        type: string
      unitsInStock:
        type: integer
      unitsOnOrder:
        type: integer
    type: object
  models.ShipperCreate:
    properties:
      companyName:
        type: string
      id:
        type: string
      phone:
        type: string
    type: object
  models.ShipperResponse:
    properties:
      companyName:
        type: string
      id:
        type: string
      phone:
        type: string
    type: object
  models.SubcategoryCreate:
    properties:
      active:
        type: boolean
      categoryID:
        type: string
      description:
        type: string
      id:
        type: string
      subCategoryName:
        type: string
    type: object
  models.SubcategoryResponse:
    properties:
      active:
        type: boolean
      categoryID:
        type: string
      description:
        type: string
      id:
        type: string
      subCategoryName:
        type: string
    type: object
  models.SupplierCreate:
    properties:
      address:
        type: string
      city:
        type: string
      companyName:
        type: string
      country:
        type: string
      homePage:
        type: string
      id:
        type: string
      phone:
        type: string
      postalCode:
        type: string
    type: object
  models.SupplierResponse:
    properties:
      address:
        type: string
      city:
        type: string
      companyName:
        type: string
      country:
        type: string
      homePage:
        type: string
      id:
        type: string
      phone:
        type: string
      postalCode:
        type: string
    type: object
info:
  contact:
    email: mario.diaz@correounivalle.edu.co
    name: AlexVonEinzbern
    url: https://github.com/AlexVonEinzbern
  description: ecommerce api-rest with basic CRUD operations (Create, Read, Update
    and Delete) products, suppliers, etc. Manage automatically invoice and shipping
    operations
  license:
    name: Apache 2.0
  termsOfService: http://swagger.io/terms/
  title: go-rest-api
  version: "1"
paths:
  /go-rest-api/categories:
    get:
      consumes:
      - application/json
      description: Search all catagories in the DataBase
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.CategoryResponse'
            type: array
        "404":
          description: Can not find objects
          schema:
            $ref: '#/definitions/models.APIError'
      summary: Search all Categories
    post:
      consumes:
      - application/json
      description: Create a Category
      parameters:
      - description: Category type
        in: body
        name: category
        required: true
        schema:
          $ref: '#/definitions/models.CategoryCreate'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.CategoryResponse'
        "404":
          description: Can not find objects
          schema:
            $ref: '#/definitions/models.APIError'
      summary: Create Category
  /go-rest-api/categories/{id}:
    delete:
      consumes:
      - application/json
      description: Delete a category by id
      parameters:
      - default: cabckbalgaLJHALncas
        description: Category ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "204":
          description: No Content
        "404":
          description: Can not find objects
          schema:
            $ref: '#/definitions/models.APIError'
      summary: Delete Category by id
    patch:
      consumes:
      - application/json
      description: Update a category by id
      parameters:
      - default: cabckbalgaLJHALncas
        description: Category ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "204":
          description: No Content
          schema:
            $ref: '#/definitions/models.CategoryResponse'
        "404":
          description: Can not find objects
          schema:
            $ref: '#/definitions/models.APIError'
      summary: Update Category by id
  /go-rest-api/categories/active:
    get:
      consumes:
      - application/json
      description: Search active categories in the DataBase
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.CategoryResponse'
            type: array
        "404":
          description: Can not find objects
          schema:
            $ref: '#/definitions/models.APIError'
      summary: Search all active Categories
  /go-rest-api/customers:
    get:
      consumes:
      - application/json
      description: Search all customers in the DataBase
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.CustomerResponse'
            type: array
        "404":
          description: Can not find objects
          schema:
            $ref: '#/definitions/models.APIError'
      summary: Search all Customers
    post:
      consumes:
      - application/json
      description: Create a Customer
      parameters:
      - description: Customer type
        in: body
        name: category
        required: true
        schema:
          $ref: '#/definitions/models.CustomerCreate'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.CustomerResponse'
        "404":
          description: Can not find objects
          schema:
            $ref: '#/definitions/models.APIError'
      summary: Create Customer
  /go-rest-api/customers/{id}:
    delete:
      consumes:
      - application/json
      description: Delete a customer by id
      parameters:
      - default: cabckbalgaLJHALncas
        description: Customer ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "204":
          description: No Content
        "404":
          description: Can not find objects
          schema:
            $ref: '#/definitions/models.APIError'
      summary: Delete Customer by id
    get:
      consumes:
      - application/json
      description: Search Customer by id in the DataBase
      parameters:
      - default: cabckbalgaLJHALncas
        description: Customer ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.CategoryResponse'
            type: array
        "404":
          description: Can not find objects
          schema:
            $ref: '#/definitions/models.APIError'
      summary: Search Customer by id
    patch:
      consumes:
      - application/json
      description: Update a customer by id
      parameters:
      - default: cabckbalgaLJHALncas
        description: Customer ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "204":
          description: No Content
          schema:
            $ref: '#/definitions/models.CustomerResponse'
        "404":
          description: Can not find objects
          schema:
            $ref: '#/definitions/models.APIError'
      summary: Update Customer by id
  /go-rest-api/login:
    post:
      consumes:
      - application/json
      description: Create a Login
      parameters:
      - description: Login type
        in: body
        name: category
        required: true
        schema:
          $ref: '#/definitions/models.LoginCreate'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.LoginResponse'
        "404":
          description: Can not find objects
          schema:
            $ref: '#/definitions/models.APIError'
      summary: Create Login
  /go-rest-api/login/{date}:
    get:
      consumes:
      - application/json
      description: Search Login by date in the DataBase
      parameters:
      - default: "2006-01-02"
        description: Login date
        in: path
        name: date
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.LoginResponse'
            type: array
        "404":
          description: Can not find objects
          schema:
            $ref: '#/definitions/models.APIError'
      summary: Search Login by Date
  /go-rest-api/login/{id}:
    get:
      consumes:
      - application/json
      description: Search Login by customer id in the DataBase
      parameters:
      - default: cabckbalgaLJHALncas
        description: Login ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.LoginResponse'
            type: array
        "404":
          description: Can not find objects
          schema:
            $ref: '#/definitions/models.APIError'
      summary: Search Login by Customer id
  /go-rest-api/orderproducts:
    get:
      consumes:
      - application/json
      description: Search all orderproducts in the DataBase
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.OrderProductResponse'
            type: array
        "404":
          description: Can not find objects
          schema:
            $ref: '#/definitions/models.APIError'
      summary: Search all OrderProducts
    post:
      consumes:
      - application/json
      description: Create a OrderProduct
      parameters:
      - description: OrderProduct type
        in: body
        name: category
        required: true
        schema:
          $ref: '#/definitions/models.OrderProductCreate'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.OrderProductResponse'
        "404":
          description: Can not find objects
          schema:
            $ref: '#/definitions/models.APIError'
      summary: Create OrderProduct
  /go-rest-api/orderproducts/{id}:
    get:
      consumes:
      - application/json
      description: Search OrderProduct by id in the DataBase
      parameters:
      - default: cabckbalgaLJHALncas
        description: OrderProduct ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.OrderProductResponse'
            type: array
        "404":
          description: Can not find objects
          schema:
            $ref: '#/definitions/models.APIError'
      summary: Search OrderProduct by id
  /go-rest-api/orders:
    get:
      consumes:
      - application/json
      description: Search all orders in the DataBase
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.OrderResponse'
            type: array
        "404":
          description: Can not find objects
          schema:
            $ref: '#/definitions/models.APIError'
      summary: Search all Orders
    post:
      consumes:
      - application/json
      description: Create a Order
      parameters:
      - description: Order type
        in: body
        name: category
        required: true
        schema:
          $ref: '#/definitions/models.OrderCreate'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.OrderResponse'
        "404":
          description: Can not find objects
          schema:
            $ref: '#/definitions/models.APIError'
      summary: Create Order
  /go-rest-api/payments:
    post:
      consumes:
      - application/json
      description: Create a Payment
      parameters:
      - description: Payment type
        in: body
        name: category
        required: true
        schema:
          $ref: '#/definitions/models.PaymentCreate'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.PaymentResponse'
        "404":
          description: Can not find objects
          schema:
            $ref: '#/definitions/models.APIError'
      summary: Create Payment
  /go-rest-api/payments/{date}:
    get:
      consumes:
      - application/json
      description: Search Payments by date in the DataBase
      parameters:
      - default: "2006-01-02"
        description: Payment date
        in: path
        name: date
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.PaymentResponse'
            type: array
        "404":
          description: Can not find objects
          schema:
            $ref: '#/definitions/models.APIError'
      summary: Search Payments by Date
  /go-rest-api/payments/{id}:
    get:
      consumes:
      - application/json
      description: Search Payment by id in the DataBase
      parameters:
      - default: cabckbalgaLJHALncas
        description: Payment ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.PaymentResponse'
            type: array
        "404":
          description: Can not find objects
          schema:
            $ref: '#/definitions/models.APIError'
      summary: Search Payment by Customer id
  /go-rest-api/products:
    get:
      consumes:
      - application/json
      description: Search all products in the DataBase
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.ProductResponse'
            type: array
        "404":
          description: Can not find objects
          schema:
            $ref: '#/definitions/models.APIError'
      summary: Search all Products
    post:
      consumes:
      - application/json
      description: Create a Product
      parameters:
      - description: Product type
        in: body
        name: product
        required: true
        schema:
          $ref: '#/definitions/models.ProductCreate'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.ProductResponse'
        "404":
          description: Can not find objects
          schema:
            $ref: '#/definitions/models.APIError'
      summary: Create Product
  /go-rest-api/products/{id}:
    delete:
      consumes:
      - application/json
      description: Delete a product by id
      parameters:
      - default: cabckbalgaLJHALncas
        description: Product ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "204":
          description: No Content
        "404":
          description: Can not find objects
          schema:
            $ref: '#/definitions/models.APIError'
      summary: Delete a Product by id
    patch:
      consumes:
      - application/json
      description: Update a product by id
      parameters:
      - default: cabckbalgaLJHALncas
        description: Product ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "204":
          description: No Content
          schema:
            $ref: '#/definitions/models.ProductResponse'
        "404":
          description: Can not find objects
          schema:
            $ref: '#/definitions/models.APIError'
      summary: Update Product by id
  /go-rest-api/products/active:
    get:
      consumes:
      - application/json
      description: Search all active products in the DataBase
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.ProductResponse'
            type: array
        "404":
          description: Can not find objects
          schema:
            $ref: '#/definitions/models.APIError'
      summary: Search all active Products
  /go-rest-api/shippers:
    get:
      consumes:
      - application/json
      description: Search all shippers in the DataBase
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.ShipperResponse'
            type: array
        "404":
          description: Can not find objects
          schema:
            $ref: '#/definitions/models.APIError'
      summary: Search all Shippers
    post:
      consumes:
      - application/json
      description: Create a Shipper
      parameters:
      - description: Shipper type
        in: body
        name: category
        required: true
        schema:
          $ref: '#/definitions/models.ShipperCreate'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.ShipperResponse'
        "404":
          description: Can not find objects
          schema:
            $ref: '#/definitions/models.APIError'
      summary: Create Shipper
  /go-rest-api/shippers/{id}:
    delete:
      consumes:
      - application/json
      description: Delete a shipper by id
      parameters:
      - default: cabckbalgaLJHALncas
        description: Shipper ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "204":
          description: No Content
        "404":
          description: Can not find objects
          schema:
            $ref: '#/definitions/models.APIError'
      summary: Delete Shipper by id
    patch:
      consumes:
      - application/json
      description: Update a shipper by id
      parameters:
      - default: cabckbalgaLJHALncas
        description: Shipper ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "204":
          description: No Content
          schema:
            $ref: '#/definitions/models.ShipperResponse'
        "404":
          description: Can not find objects
          schema:
            $ref: '#/definitions/models.APIError'
      summary: Update Shipper by id
  /go-rest-api/subcategories:
    get:
      consumes:
      - application/json
      description: Search all subcatagories in the DataBase
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.SubcategoryResponse'
            type: array
        "404":
          description: Can not find objects
          schema:
            $ref: '#/definitions/models.APIError'
      summary: Search all Subcategories
    post:
      consumes:
      - application/json
      description: Create a Subcategory
      parameters:
      - description: Create a subcategory
        in: body
        name: subcategory
        required: true
        schema:
          $ref: '#/definitions/models.SubcategoryCreate'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.SubcategoryResponse'
        "404":
          description: Can not find objects
          schema:
            $ref: '#/definitions/models.APIError'
      summary: Create Subcategory
  /go-rest-api/subcategories/{id}:
    delete:
      consumes:
      - application/json
      description: Delete a subcategory by id
      parameters:
      - default: cabckbalgaLJHALncas
        description: Subcategory ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "204":
          description: No Content
        "404":
          description: Can not find objects
          schema:
            $ref: '#/definitions/models.APIError'
      summary: Delete a Subcategory by id
    patch:
      consumes:
      - application/json
      description: Update a subcategory by id
      parameters:
      - default: cabckbalgaLJHALncas
        description: Subcategory ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "204":
          description: No Content
          schema:
            $ref: '#/definitions/models.SubcategoryResponse'
        "404":
          description: Can not find objects
          schema:
            $ref: '#/definitions/models.APIError'
      summary: Update Subcategory by id
  /go-rest-api/subcategories/active:
    get:
      consumes:
      - application/json
      description: Search all active categories in the DataBase
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.SubcategoryResponse'
            type: array
        "404":
          description: Can not find objects
          schema:
            $ref: '#/definitions/models.APIError'
      summary: Search all active Subcategories
  /go-rest-api/suppliers:
    get:
      consumes:
      - application/json
      description: Search all suppliers in the DataBase
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.SupplierResponse'
            type: array
        "404":
          description: Can not find objects
          schema:
            $ref: '#/definitions/models.APIError'
      summary: Search all Suppliers
    post:
      consumes:
      - application/json
      description: Create a Supplier
      parameters:
      - description: Supplier type
        in: body
        name: category
        required: true
        schema:
          $ref: '#/definitions/models.SupplierCreate'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.SupplierResponse'
        "404":
          description: Can not find objects
          schema:
            $ref: '#/definitions/models.APIError'
      summary: Create Supplier
  /go-rest-api/suppliers/{id}:
    delete:
      consumes:
      - application/json
      description: Delete a supplier by id
      parameters:
      - default: cabckbalgaLJHALncas
        description: Supplier ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "204":
          description: No Content
        "404":
          description: Can not find objects
          schema:
            $ref: '#/definitions/models.APIError'
      summary: Delete Supplier by id
    patch:
      consumes:
      - application/json
      description: Update a supplier by id
      parameters:
      - default: cabckbalgaLJHALncas
        description: Supplier ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "204":
          description: No Content
          schema:
            $ref: '#/definitions/models.SupplierResponse'
        "404":
          description: Can not find objects
          schema:
            $ref: '#/definitions/models.APIError'
      summary: Update Supplier by id
swagger: "2.0"
